loanstats <- read.csv("loanstats_trimmed.csv",skip=1)
loans <- loanstats[,c(3,6,7,12,13,14,16,21,24,25,26,27,30,33,34,35,36,37,52)]
head(loans) ## see newly created data table
loans <- loanstats[,c(3,6,7,12,13,14,16,21,24,25,26,27,30,33,34,35,36,37,52)]
loans <- loanstats[,c(3,6,7,12,13,14,16,21,24,25,26,27,30,33,34,35,36,37,52)]
loans
loans <- loanstats[,c(3,6,7,12,13,14,16,21,24,25,26,27,30,33,34,35,36,37,52)]
loanstats
loanstats <- read.csv("loanstats.csv",skip=1)
loanstats <- read.csv("loanstats.csv",skip=1)
loanstats <- read.csv("loanstats_trimmed.csv",skip=1)
summary(loanstats)
View(loanstats)
loanstats <- read.csv("loanstats.csv",skip=1)
summary(loanstats)
loans <- loanstats[,c(3,6,7,12,13,14,16,21,24,25,26,27,30,33,34,35,36,37,52)]
head(loans) ## see newly created data table
loans <- loanstats[,c(3,6,7,12,13,14,16,21,24,25,26,27,30,33,34,35,36,37,52)]
loanstats <- read.csv("loanstats.csv",skip=1)
loans <- loanstats[,c(3,6,7,12,13,14,16,21,24,25,26,27,30,33,34,35,36,37,52)]
head(loans) ## see newly created data table
class(loans$term) ## example - shows R recognizes "term" as a factor
loans <- loanstats[,c(3,6,7,12,13,14,16,21,24,25,26,27,30,33,34,35,36,37,52)]
loanstats <- read.csv("loanstats_trimmed.csv",skip=1)
summary(loanstats)
loans <- loanstats[,c(3,6,7,12,13,14,16,21,24,25,26,27,30,33,34,35,36,37,52)]
loans <- read.csv("loanstats_trimmed.csv")
head(loans) ## see newly created data table
class(loans$term) ## example - shows R recognizes "term" as a factor
hist(loans$int_rate, col="lightblue", xlab="Interest Rate", main="")
hist(loans$loan_amnt, col="lightblue", xlab="Loan Amount", main="")
plot(loans$int_rate[loans$revol_util>.95])
plot(loans$int_rate[loans$revol_util<.05])
loanslm <- glm(int_rate~., data=loans)
1 - loanslm$deviance/loanslm$null.deviance ## Calculates R-squared
loanslm.sigma.hat <- (loanslm$dev/84192)**0.5
loans$predict <- predict(loanslm)
loans$resid <- loans$int_rate - loans$predict
loanslm.sigma.hat <- (loanslm$dev/84192)**0.5
pcfx <- prcomp(fx, scale=TRUE)
View(loans)
View(loans)
help(prcomp)
pcfx <- prcomp(int_rate~ .m data=loans, scale=TRUE)
pcfx <- prcomp(int_rate~ ., data=loans, scale=TRUE)
pcfx <- prcomp(int_rate ~ ., data=loans, scale=TRUE)
pcfx <- prcomp(int_rate ~., data=loans, scale=TRUE)
pcfx <- prcomp(int_rate~., data=loans, scale = TRUE)
prcomp(int_rate~., data=loans, scale = TRUE)
View(loans)
loans$int_rate
View(loans)
loans_less_int <- loans[,-3]
View(loans_less_int)
pcloans <- prcomp(loans, scale = TRUE)
loans_less_int <- loans[,-3]
pcloans <- prcomp(loans, scale = TRUE)
help(prcomp)
loans_less_int <- loans[,-3]
loansTopics <- topics(loans_less_int,K=2:25)
library(maptpx)
x <- as.simple_triplet_matrix(loans_less_int)
loansTopics <- topics(x,K=2:25)
help(topics)
loansTopics <- topics(loans_less_int,K=2:25)
x
library(maptpx)
loans_less_int <- loans[,-3]
x <- as.simple_triplet_matrix(loans_less_int)
pcloans <- prcomp(loans, scale = TRUE)
x <- as.simple_triplet_matrix(loans_less_int)
pcloans <- prcomp(x, scale = TRUE)
View(loans_less_int)
View(loans)
help(factor)
class(x)
class(loans_less_int)
loans_less_int
model.matrix(~ . + 0, data=loans_less_int, contrasts.arg = lapply(loans_less_int, contrasts, contrasts=FALSE))
factored_loans_less_int <- factor(loans_less_int)
factored_loans_less_int <- factor(loans_less_int)
x2 <- transform(race=factor(race))
loans_less_int
factor(loans_less_int$term)
source('~/.active-rstudio-document', echo=TRUE)
summary(factor(loans_less_int$term))
head(factor(loans_less_int))
library(maptpx)
loans_less_int <- loans[,-3]
loans_less_int
summary(factor(loans_less_int$term))
f.loans_less_int <- factor(loans_less_int)
f.loans_less_int <- factor(loans_less_int)
f.loans_less_int <- factor(loans_less_int$term)
f.loans_less_int
head(factor(f.loans_less_int))
View(loans_less_int)
f.loans_less_int <- factor(loans_less_int$term)
f.loans_less_int
head(factor(f.loans_less_int))
View(loans_less_int)
rownames(m2)
rownames(m2) <- rownames(m2, do.NULL = FALSE, prefix = "Obs.")
m2 <- cbind(1, 1:4)
colnames(m2, do.NULL = FALSE)
colnames(m2) <- c("x","Y")
rownames(m2) <- rownames(m2, do.NULL = FALSE, prefix = "Obs.")
rownames(m2)
summary(loanslm)
help(c)
rownames(summary(loanslm)$coef)[-1][signif]
names(pvals)[pvals<alpha] ## those variable significant at alpha=0.05
source("fdr.R")
alpha <- fdr_cut(pvals, .05) ## cutoff
signif <- which(pvals <= alpha) ## which are significant
length(signif)  ## the number significant
names(pvals)[pvals<alpha] ## those variable significant at alpha=0.05
sig_coef <- names(pvals)[pvals<alpha] ## those variable significant at alpha=0.05
class(sig_coef)
cutvar <- c("int_rate", rownames(sig_coef)
cutvar <- c("int_rate", rownames(sig_coef))
cutvar <- c("int_rate", rownames[sig_coef])
rownames(summary(loanslm)$coef)[-1][signif]
loanslm_cut <- glm(int_rate ~ ., data=loans[,sig_coef]) ## DOESN'T WORK
sig_coef <- names(pvals)[pvals<alpha] ## those variable significant at alpha=0.05
sig_coef
rownames(summary(loanslm)$coef)[-1][signif]
sigcoef2 <- rownames(summary(loanslm)$coef)[-1][signif]
class(sigcoef2)
sig_coef
class(sig_coef)
sigcoef2[5]
sigcoef2[4]
sigcoef2[2]
loanslm_cut <- glm(int_rate ~ ., data=loans[,sig_coef]) ## DOESN'T WORK
loans[,sig_coef]
rownames(sig_coef)
rownames(sigcoef2)
select.me <- c('v1','v2')
df[,select.me]
select.me <- c('v1','v2')
select.me
df[,select.me]
loans[,sig_coef[]]
pvals <- summary(loanslm)$coef[-1,4] #-1 to drop the intercept
## plot them: it looks like we have some signal here
hist(pvals, xlab="p-value", main="", col="lightblue")
alpha <- fdr_cut(pvals, .05) ## cutoff
signif <- which(pvals <= alpha) ## which are significant
length(signif)  ## the number significant
sig_coef <- names(pvals)[pvals<alpha] ## those variable significant at alpha=0.05
class(sig_coef)
signif <- which(pvals <= alpha) ## which are significant
class(signif)
length(signif)  ## the number significant
cutvar <- c("FAIL", rownames(summary(loanslm)$coef)[-1][signif])
cutvar
rownames(summary(loanslm)$coef)[-1][signif]
cut <- glm(FAIL ~ ., data=SC[,cutvar], family="binomial")
cut <- glm(FAIL ~ ., data=loans[,cutvar], family="binomial")
class(loans)
cut <- glm(FAIL ~ ., data=loans[,cutvar], family="binomial")
View(loans)
mmloans <- model.matrix(loans)
help(model.matrix)
mm.loans <- sparse.model.matrix(FAIL ~ ., data=loans)[,-1] # do -1 to drop intercept!
library(gamlr)
mm.loans <- sparse.model.matrix(FAIL ~ ., data=loans)[,-1] # do -1 to drop intercept!
help(sparse.model.matrix)
mm.loans <- sparse.model.matrix(~ ., data=loans)[,-1] # do -1 to drop intercept!
mm.loans
cut <- glm(FAIL ~ ., data=loans[,cutvar], family="binomial")
cutvar <- c("FAIL", rownames(summary(loanslm)$coef)[-1][signif])
cutvar <- c("FAIL", rownames(summary(loanslm)$coef)[-1][signif])
cutvar <- c("FAIL", rownames(summary(loanslm)$coef)[-1][signif])
cutvar
cut <- glm(FAIL ~ ., data=loans[,cutvar], family="binomial")
cut <- glm(FAIL ~ ., data=mm.loans[,cutvar], family="binomial")
mm.loans
mm.loans <- sparse.model.matrix(~ ., data=loans, row.names=true)[,-1] # do -1 to drop intercept!
mm.loans <- sparse.model.matrix(~ ., data=loans, row.names=TRUE)[,-1] # do -1 to drop intercept!
cut <- glm(FAIL ~ ., data=mm.loans[,cutvar], family="binomial")
mm.loans
head(mm.loans)
mm.loans <- model.matrix(~ ., data=loans, row.names=TRUE)[,-1] # do -1 to drop intercept!
head(mm.loans)
head(mm.loans)
cut <- glm(FAIL ~ ., data=mm.loans[,cutvar], family="binomial")
cutvar <- c("FAIL", rownames(summary(loanslm)$coef)[-1][signif])
## Re-run a cut regression using only these 36
## [pulled from semiconductor ex - NEED TO DO DIFFERENTLY because we have factors]
# get names of variables to include
# run regression on these alone
####Waiting on Piazza response
library(gamlr)
mm.loans <- model.matrix(~ ., data=loans, row.names=TRUE)[,-1] # do -1 to drop intercept!
head(mm.loans)
cut <- glm(FAIL ~ ., data=mm.loans[,cutvar], family="binomial")
head(mm.loans)
summary(mm.loans)
head(mm.loans)
source('~/.active-rstudio-document', echo=TRUE)
cutvar
head(mm.loans)
cutvar <- c("FAIL", rownames(summary(loanslm)$coef)[-1][signif])
library(gamlr)
mm.loans <- model.matrix(~ ., data=loans, row.names=TRUE)[,-1] # do -1 to drop intercept!
head(mm.loans)
cutvar
cut <- glm(FAIL ~ ., data=mm.loans[,cutvar], family="binomial")
head(mm.loans)
cut <- glm(FAIL ~ ., data=mm.loans[,emplength1], family="binomial")
cut <- glm(FAIL ~ ., data=mm.loans[,emplength1], family="binomial")
cut <- glm(FAIL ~ cutvar, data=mm.loans, family="binomial")
mm.loans[,cutvar]
mm.loans
mm.loans[,total_acc]
mm.loans[,total_acc]
mm.loans[,1]
head(mm.loans[,1])
head(mm.loans[,2])
head(mm.loans[,9])
head(mm.loans[,])
head(mm.loans[revol_bal,])
head(mm.loans[,revol_bal])
mm.loans[,revol_bal]
help(colnames)
colnames(mm.loans)
mm.loans[,"revol_bal"]
mm.loans[,cutvar]
mm.loans[,"cutvar"]
mm.loans[,""cutvar""]
mm.loans, "total_acc""]
mm.loans[, "total_acc""]
mm.loans[, "total_acc"]
mm.loans
mm.loans[, "aesfaf"]
colnames(mm.loan)
colnames(mm.loans)
mm.loans[, "pub_rec"]
head(mm.loans[, "pub_rec"])
cutvar
head(mm.loans[, cutvar])
mm.loans[, cutvar]
mm.loans[, cutvar]
colnames(mm.loans)
mm.loans[,"total_acc"+"revol_bal"]
mm.loans[,"total_acc" "revol_bal"]
mm.loans[,"total_acc+revol_bal"]
mm.loans[,"total_acc"]
